# Minimal ISA manifest for arithmetic loop example
header minimal_isa
org 0x0000
label main
bytes 0x0101000000000000  ; mov r1, #0             ; accumulator
bytes 0x0102040000000000  ; mov r2, #4             ; counter
label loop
bytes 0x0401020100000000  ; add r1, r1, r2         ; accumulator += counter
bytes 0x0502FF0100000000  ; sub r2, #1             ; counter--
bytes 0x0602010000000000  ; cmp r2, #0             ; compare with zero
bytes 0x0801020000000000  ; cjmp eq, exit          ; if zero -> exit
bytes 0x0700F4FFFFFFFF00  ; jmp loop               ; loop back (placeholder displacement)
label exit
bytes 0x0100000000000000  ; mov r0, r1             ; move result into r0

label __aur_runtime_exit_with_r0
bytes 0x0B02000000000000  ; svc 0x02 exit(r0)
halt

